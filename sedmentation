#Thresholding  using cv2,matplotlib.pylab and numpy
import cv2 as cv
import numpy as np
import matplotlib.pylab as plt
#read the image
img=cv.imread("D:\IPMV files\IPMV images\light1.jpg",0)
#img=cv.cvtColor(img,cv.COLOR_BGR2RGB)
#show the img
plt.subplot(1,6,1)
plt.title('original image')
plt.imshow(img,cmap='gray')

#using opencv instruction
a,img2=cv.threshold(img,107,255,0)
#showing result
plt.subplot(1,6,2)
plt.title('Threshold Img')
plt.imshow(img2,cmap='gray')

b,img2=cv.threshold(img,107,255,1)
plt.subplot(1,6,3)
plt.title('Threshold Img2')
plt.imshow(img2,cmap='gray')

c,img2=cv.threshold(img,107,255,2)
plt.subplot(1,6,4)
plt.title('Threshold Img3')
plt.imshow(img2,cmap='gray')

c,img2=cv.threshold(img,107,255,3)
plt.subplot(1,6,5)
plt.title('Threshold Img3')
plt.imshow(img2,cmap='gray')

d,img2=cv.threshold(img,107,255,4)
plt.subplot(1,6,6)
plt.title('Threshold Img4')
plt.imshow(img2,cmap='gray')
plt.show()








#k-mean segmentation
import cv2 as cv
import numpy as np
import matplotlib.pylab as plt

#import and show the image
img=cv.imread("C:/Users/student/Downloads/pexels-simon-berger-1323550.jpg",1)
img=cv.cvtColor(img,cv.COLOR_BGR2RGB)
plt.subplot(1,2,1)
plt.title('original image')
plt.imshow(img)

#AS img is 3d we convert it in 2d for applying kmean seg by using rehape
pel_values=img.reshape((-1,3))
#converting into floaat
pel_values=np.float32(pel_values)

criteria=(cv.TERM_CRITERIA_EPS + cv.TERM_CRITERIA_MAX_ITER,100,0.85)
#PERfORMING K-MEANS CLUSTERING WITH n NUMBER of clusters with random centers
#chosen initially
k=5
retval,labels,centers=cv.kmeans(pel_values,k,None,criteria,10,cv.KMEANS_RANDOM_CENTERS)
print('retval',retval)
print('labels',labels )
print('centers',centers)

#convert data into 8 bit vals
centers=np.uint8(centers)
segmented_data=centers[labels.flatten()]

#reshape data into the originalnimage dimensions
segmented_image=segmented_data.reshape((img.shape))
plt.subplot(1,2,2)
plt.title('kmeans segmented img')
plt.imshow(segmented_image)
plt.show()
